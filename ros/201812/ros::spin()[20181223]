#ros的循环机制
##1 ros::spin() 和 ros::spinOnce() 区别及详解
ros::spin()家族成为ros的消息回电处理函数。灵活应用这两个函数可以实现循环的功能。
二者的区别就是
###1）ros::spin（）
循环等带消息，一旦程序执行到这一句时，话题中的消息就会被送到回调函数。同样也可以理解为每次执行spin()，就相当于使用goto到回调函数的位置。
需要注意的是:ros::spin()函数一般不会出现在循环中，因为程序执行到spin()后就不调用其他语句了，也就是说该循环没有任何意义。等价于，ros::spin()后面所有的语句都是武侠的。
###2） ros::spinOnce()
接受到消息后只执行一次回调函数，然后顺序执行后面的语句。
常常和while(ros::ok())配合使用，使循环变得可定义。

##2 ros::Rate loop_rate(hz)
利用rosrate来实现控制循环的瓶铝，要注意考虑消息的实际，调用频率，以及消息池的大小。
实例代码
```
ros::Rate loop_rate(5);
    while (ros::ok())
    {
        /*...TODO...*/ 
 
        ros::spinOnce();
        loop_rate.sleep();
    }
```

**ros::spinOnce()的用法相对来说很灵活，但往往需要考虑调用消息的时机，调用频率，以及消息池的大小，这些都要根据现实情况协调好，不然会造成数据丢包或者延迟的错误。**

